Dragula:
easy drag and drop
mobile support
"global" configuration of options, containers, and event listeners
API: https://github.com/bevacqua/dragula#api
Events: drag, dragend, drop, cancel, remove, shadow, over, out cloned

Sortable
can attach event listener to every object but afaik these listeners cannot
be used to stop a drop: but we need to do that to make sure that elements
may only be dropped at valid locations

Idea for Sortable:
Have one <ul> per type. The type's id (in the schema, needs to be defined) is the sortable group's name.
DnD only possible between same groups => only valid types can be dropped
TODO:
* one <ul> for every type and droppoint
  * also if no child is present
  * make empty ones visible on dragover or hover
* new elements are added to correct <ul>
* group name set to id of type: extracted from schema

anyOf Models:
-> use multiple ids for one group (<ul>)

DND Challenges:
Tree:
  t1: move <li> element and children and insert as child of the new parent's <ul> element
  t2: only allow drop if dragged element is compatible with at least one droppoint of the new parent.
    * corner case: what if it's compatible with more than one droppoint? -> ask user?
    -> need to check the current data against potential parents' dropPoints
      -> need access to own dropPoints in parents
      -> either need to validate data against droppoint (potential problem: how to move invalid data of correct "type")
         or need to know what "type" the moved data has
Data:
  d1: remove data represented by dragged <li> from old parent
    -> need access to parent and need to know what to remove
    -> maybe could use existing deleteFunction for this
  d2: add data represented by dragged <li> to new parent
    -> need access to new parent and the data to add
  d3: incase of move within the same parent: move data to correct index
